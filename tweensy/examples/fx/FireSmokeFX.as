package {	import flash.display.*;	import flash.events.*;	import flash.filters.BlurFilter;	import flash.geom.ColorTransform;	import flash.utils.getDefinitionByName;	import com.flashdynamix.motion.effects.*;	import com.flashdynamix.motion.effects.core.*;	import com.flashdynamix.motion.extras.Emitter;	import com.flashdynamix.motion.layers.*;	import com.flashdynamix.utils.SWFProfiler;		/**	 * @author shanem	 */	public class FireSmokeFX extends Sprite {		
		private var flameEmittor : Emitter;		private var smokeEmittor : Emitter;		private var layer : BitmapLayer;		private var smokeStartCt : ColorTransform;		private var smokeEndCt : ColorTransform;		private var fireStartCt : ColorTransform;		private var disp : PerlinDisplacementEffect;		private var tx : Number;		private var ty : Number;
		public function FireSmokeFX() {			SWFProfiler.init(this);						layer = new BitmapLayer(550, 400, 2, 0x00FFFFFF, true);			disp = new PerlinDisplacementEffect(275, 200, 0, -5, 2);			disp.movement = PerlinDisplacementEffect.DIRECTION;						layer.add(disp);			layer.add(new ScrollEffect(0, -2));			layer.add(new FilterEffect(new BlurFilter(3, 3, 1)));			layer.add(new ColorEffect(new ColorTransform(1, 1, 1, 0.9)));						smokeStartCt = new ColorTransform(-0.275, 0.05, -0.05, 1, 166, 45, -6, -50);			smokeEndCt = new ColorTransform(-0.35, -0.25, -0.125, 1, 13, 51, 19, -200);						fireStartCt = new ColorTransform(1, 0, 0.2, 1, 255, 90, 0);						stage.quality = StageQuality.LOW;						var Flame : Class = getDefinitionByName("Flame") as Class;			var FlameBmd : Class = getDefinitionByName("FlameBmd") as Class;			var Smoke : Class = getDefinitionByName("Smoke") as Class;						flameEmittor = new Emitter(Flame, {scaleX:1, scaleY:1, rotation:"-180,180", alpha:0.3}, 4, 1, "255, 285", "30, 60", 0.5, BlendMode.ADD);			flameEmittor.transform.colorTransform = fireStartCt;			flameEmittor.scale = 0.5;						smokeEmittor = new Emitter(Smoke, {scaleX:2.5, scaleY:2.5, rotation:"-180,180"}, 1, 1, "255, 285", "100, 200", 1);			smokeEmittor.transform.colorTransform = smokeStartCt;			smokeEmittor.endColor = smokeEndCt;			smokeEmittor.scale = 0.1;						layer.draw(smokeEmittor.holder);			layer.draw(flameEmittor.holder);						tx = 250;			ty = 350;						addChildAt(layer, 0);						addEvent(stage, Event.ENTER_FRAME, draw);			addEvent(stage, MouseEvent.MOUSE_MOVE, move);		}
		private function move(e : MouseEvent) : void {			tx = stage.mouseX;			ty = stage.mouseY;		}
		private function draw(e : Event) : void {			smokeEmittor.x += (tx - smokeEmittor.x) / 4;			smokeEmittor.y += (ty - smokeEmittor.y) / 4;			flameEmittor.x = smokeEmittor.x;			flameEmittor.y = smokeEmittor.y;		}
		protected function addEvent(item : EventDispatcher, type : String, liststener : Function, priority : int = 0, useWeakReference : Boolean = true) : void {			item.addEventListener(type, liststener, false, priority, useWeakReference);		}
		protected function removeEvent(item : EventDispatcher, type : String, listener : Function) : void {			item.removeEventListener(type, listener);		}	}}