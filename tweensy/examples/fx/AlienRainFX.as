package {	import flash.display.*;	import flash.filters.BlurFilter;	import flash.filters.GlowFilter;	import flash.geom.ColorTransform;	import flash.utils.getDefinitionByName;		import com.flashdynamix.motion.*;	import com.flashdynamix.motion.effects.*;	import com.flashdynamix.motion.effects.core.*;	import com.flashdynamix.motion.layers.BitmapLayer;	import com.flashdynamix.utils.SWFProfiler;		import fl.motion.easing.*;		/**	 * @author shanem	 */	public class AlienRainFX extends Sprite {		private var tween : TweensyGroup;		private var layer : BitmapLayer;		private var holder : Sprite;		public function AlienRainFX() {			SWFProfiler.init(this);						tween = new TweensyGroup(false, true, Tweensy.FRAME);			tween.secondsPerFrame = 1 / 40;			layer = new BitmapLayer(550, 400, 2);			holder = new Sprite();						layer.add(new PerlinDisplacementEffect(275, 200, 2, -6, 1));			layer.add(new FilterEffect(new BlurFilter(3, 3, 1)));			layer.add(new ColorEffect(new ColorTransform(1, 1, 1, 0.95)));			layer.draw(holder);						var gf : GlowFilter = new GlowFilter(0x93FF77, 0.5, 40, 40, 1, 1, false, false);			layer.filters = [gf];			stage.quality = StageQuality.LOW;						addChild(layer);						for(var i : int = 0;i < 20; i++) {				addBlob();			}		}		private function addBlob() : void {			var Box : Class = getDefinitionByName("Box") as Class;			var item : Sprite = new Box();			item.y = -100;			item.x = (Math.random() * 550) - 20;			item.scaleX = item.scaleY = 3 + (Math.random() * 3);			item.blendMode = (Math.random() > 0.5) ? BlendMode.ADD : BlendMode.HARDLIGHT;						var ct : ColorTransform = new ColorTransform();			ct.redOffset = 50 + (25 * Math.random());			ct.greenOffset = 150 + (50 * Math.random());			item.transform.colorTransform = ct;							var tl : TweensyTimeline = tween.to(item, {scaleX:'3', scaleY:'3', y:"400, 500", x:"-10, 10"}, 1 + Math.random() * 0.5, Linear.easeNone, Math.random() * 2);			tl.delayEnd = 1 + Math.random();			tl.repeatType = TweensyTimeline.REPLAY;						holder.addChild(item);		}	}}